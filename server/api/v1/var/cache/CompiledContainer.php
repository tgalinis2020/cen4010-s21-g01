<?php
/**
 * This class has been auto-generated by PHP-DI.
 */
class CompiledContainer extends DI\CompiledContainer{
    const METHOD_MAPPING = array (
  'Doctrine\\DBAL\\Connection' => 'get1',
  'ThePetPark\\Services\\JWT\\Encoder' => 'get2',
  'ThePetPark\\Services\\JWT\\Decoder' => 'get3',
  'ThePetPark\\Library\\Graph\\Adapters\\Slim\\Adapter' => 'get4',
  'ThePetPark\\Middleware\\Session' => 'get5',
  'ThePetPark\\Http\\UploadFile' => 'get6',
  'ThePetPark\\Http\\Session\\Resolve' => 'get7',
  'ThePetPark\\Http\\Session\\Create' => 'get8',
  'ThePetPark\\Http\\Session\\Delete' => 'get9',
  'ThePetPark\\Http\\Actions\\Users\\Create' => 'get10',
  'subEntry1' => 'get11',
  'ThePetPark\\Http\\Actions\\Users\\Update' => 'get12',
  'ThePetPark\\Http\\Actions\\Posts\\Create' => 'get13',
  'subEntry2' => 'get14',
  'ThePetPark\\Http\\Actions\\Posts\\Update' => 'get15',
  'subEntry3' => 'get16',
  'ThePetPark\\Http\\Actions\\Comments\\Create' => 'get17',
  'subEntry4' => 'get18',
  'ThePetPark\\Http\\Actions\\Comments\\Update' => 'get19',
  'subEntry5' => 'get20',
  'ThePetPark\\Http\\Actions\\Pets\\Create' => 'get21',
  'subEntry6' => 'get22',
  'ThePetPark\\Http\\Actions\\Pets\\Update' => 'get23',
  'subEntry7' => 'get24',
  'router' => 'get25',
  'environment' => 'get26',
  'request' => 'get27',
  'response' => 'get28',
  'foundHandler' => 'get29',
  'callableResolver' => 'get30',
  'errorHandler' => 'get31',
  'phpErrorHandler' => 'get32',
  'notFoundHandler' => 'get33',
  'notAllowedHandler' => 'get34',
  'settings' => 'get35',
  'subEntry8' => 'get36',
  'subEntry9' => 'get37',
  'subEntry10' => 'get38',
  'subEntry11' => 'get39',
  'subEntry12' => 'get40',
  'subEntry13' => 'get41',
  'subEntry14' => 'get42',
  'subEntry15' => 'get43',
  'subEntry16' => 'get44',
);

    protected function get1()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return \Doctrine\DBAL\DriverManager::getConnection(
            $c->get('settings')['doctrine']['connection']
        );
    }, 'Doctrine\\DBAL\\Connection');
    }

    protected function get2()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        $settings = $c->get('settings')['firebase']['php-jwt'];

        return new \ThePetPark\Services\JWT\Encoder(
            $settings['secret_key'],
            $settings['algorithms'][$settings['selected_algorithm']]
        );
    }, 'ThePetPark\\Services\\JWT\\Encoder');
    }

    protected function get3()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        $settings = $c->get('settings')['firebase']['php-jwt'];

        return new \ThePetPark\Services\JWT\Decoder(
            $settings['secret_key'],
            $settings['algorithms']
        );
    }, 'ThePetPark\\Services\\JWT\\Decoder');
    }

    protected function get4()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        $settings = $c->get('settings')['graph'];

        $driver = new \ThePetPark\Library\Graph\Drivers\Doctrine\Driver(
            $c->get(\Doctrine\DBAL\Connection::class),
            $settings['driver']
        );

        $graph = new \ThePetPark\Library\Graph\App($settings, $driver, $c->get('response'), $c);

        return new \ThePetPark\Library\Graph\Adapters\Slim\Adapter($graph);
    }, 'ThePetPark\\Library\\Graph\\Adapters\\Slim\\Adapter');
    }

    protected function get5()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return new \ThePetPark\Middleware\Session(
            $c->get(\ThePetPark\Services\JWT\Decoder::class)
        );
    }, 'ThePetPark\\Middleware\\Session');
    }

    protected function get6()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return new \ThePetPark\Http\UploadFile(
            $c->get('settings')['uploadDirectory']
        );
    }, 'ThePetPark\\Http\\UploadFile');
    }

    protected function get7()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return new \ThePetPark\Http\Session\Resolve();
    }, 'ThePetPark\\Http\\Session\\Resolve');
    }

    protected function get8()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return new \ThePetPark\Http\Session\Create(
            $c->get(\Connection::class),
            $c->get(\ThePetPark\Services\JWT\Encoder::class)
        );
    }, 'ThePetPark\\Http\\Session\\Create');
    }

    protected function get9()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return new \ThePetPark\Http\Session\Delete();
    }, 'ThePetPark\\Http\\Session\\Delete');
    }

    protected function get11()
    {
        return $this->delegateContainer->get('Connection');
    }

    protected function get10()
    {
        $object = new ThePetPark\Http\Actions\Users\Create($this->get11());
        return $object;
    }

    protected function get12()
    {
        $object = new ThePetPark\Http\Actions\Users\Update();
        return $object;
    }

    protected function get14()
    {
        return $this->delegateContainer->get('Connection');
    }

    protected function get13()
    {
        $object = new ThePetPark\Http\Actions\Posts\Create($this->get14());
        return $object;
    }

    protected function get16()
    {
        return $this->delegateContainer->get('Connection');
    }

    protected function get15()
    {
        $object = new ThePetPark\Http\Actions\Posts\Update($this->get16());
        return $object;
    }

    protected function get18()
    {
        return $this->delegateContainer->get('Connection');
    }

    protected function get17()
    {
        $object = new ThePetPark\Http\Actions\Comments\Create($this->get18());
        return $object;
    }

    protected function get20()
    {
        return $this->delegateContainer->get('Connection');
    }

    protected function get19()
    {
        $object = new ThePetPark\Http\Actions\Comments\Update($this->get20());
        return $object;
    }

    protected function get22()
    {
        return $this->delegateContainer->get('Connection');
    }

    protected function get21()
    {
        $object = new ThePetPark\Http\Actions\Pets\Create($this->get22());
        return $object;
    }

    protected function get24()
    {
        return $this->delegateContainer->get('Connection');
    }

    protected function get23()
    {
        $object = new ThePetPark\Http\Actions\Pets\Update($this->get24());
        return $object;
    }

    protected function get25()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        $router = new \Slim\Router();

        $router->setContainer($c);
        $router->setCacheFile($c->get('settings')['routerCacheFile']);

        return $router;
    }, 'router');
    }

    protected function get26()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return new \Slim\Http\Environment($_SERVER);
    }, 'environment');
    }

    protected function get27()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return \Slim\Http\Request::createFromEnvironment($c->get('environment'));
    }, 'request');
    }

    protected function get28()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        $headers = new \Slim\Http\Headers([
            'Content-Type' => 'application/json; charset=UTF-8',
        ]);
        $response = new \Slim\Http\Response(200, $headers);

        return $response->withProtocolVersion($c->get('settings')['httpVersion']);
    }, 'response');
    }

    protected function get29()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return new \Slim\Handlers\Strategies\RequestResponse();
    }, 'foundHandler');
    }

    protected function get30()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return new \Slim\CallableResolver($c);
    }, 'callableResolver');
    }

    protected function get31()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return new \Slim\Handlers\Error($c->get('settings')['displayErrorDetails']);
    }, 'errorHandler');
    }

    protected function get32()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return new \Slim\Handlers\PhpError($c->get('settings')['displayErrorDetails']);
    }, 'phpErrorHandler');
    }

    protected function get33()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return new \Slim\Handlers\NotFound();
    }, 'notFoundHandler');
    }

    protected function get34()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return new \Slim\Handlers\NotAllowed();
    }, 'notAllowedHandler');
    }

    protected function get38()
    {
        return [
            0 => 'HS256',
            1 => 'HS512',
        ];
    }

    protected function get37()
    {
        return [
            'secret_key' => 'C:\\xampp\\htdocs\\cen4010-s21-g01\\server\\api\\v1\\etc/secret.key',
            'algorithms' => $this->get38(),
            'selected_algorithm' => 0,
        ];
    }

    protected function get36()
    {
        return [
            'php-jwt' => $this->get37(),
        ];
    }

    protected function get40()
    {
        return $this->resolveFactory(static function () {
                // Use MySQL config file to initialize the database connection.
                $conf = \parse_ini_file(\dirname('C:\\xampp\\htdocs\\cen4010-s21-g01\\server\\api\\v1\\etc', 4) . '/.my.cnf');

                return [
                    'driver'   => 'pdo_mysql',
                    'host'     => $conf['host'],
                    'port'     => $conf['port'],
                    'dbname'   => $conf['database'],
                    'charset'  => $conf['charset'],
                    'user'     => $conf['user'],
                    'password' => $conf['pass'],
                ];
            }, 'subEntry12');
    }

    protected function get39()
    {
        return [
            'connection' => $this->get40(),
        ];
    }

    protected function get43()
    {
        return [
            'defaultPageSize' => 15,
        ];
    }

    protected function get44()
    {
        return [
            0 => 'ThePetPark\\Library\\Graph\\Drivers\\Doctrine\\Features\\Pagination\\CursorStrategy',
            1 => 'ThePetPark\\Library\\Graph\\Drivers\\Doctrine\\Features\\Pagination\\PageStrategy',
            2 => 'ThePetPark\\Library\\Graph\\Drivers\\Doctrine\\Features\\Pagination\\OffsetLimitStrategy',
            3 => 'ThePetPark\\Library\\Graph\\Drivers\\Doctrine\\Features\\Filters',
            4 => 'ThePetPark\\Library\\Graph\\Drivers\\Doctrine\\Features\\Sorting',
        ];
    }

    protected function get42()
    {
        return [
            'settings' => $this->get43(),
            'features' => $this->get44(),
        ];
    }

    protected function get41()
    {
        return [
            'definitions' => 'C:\\xampp\\htdocs\\cen4010-s21-g01\\server\\api\\v1/var/cache/schemas.php',
            'baseUrl' => 'https://lamp.cse.fau.edu/~cen4010_s21_g01/api-v1.php',
            'driver' => $this->get42(),
        ];
    }

    protected function get35()
    {
        return [
            'httpVersion' => '1.1',
            'responseChunkSize' => 4096,
            'outputBuffering' => 'append',
            'determineRouteBeforeAppMiddleware' => false,
            'displayErrorDetails' => true,
            'addContentLengthHeader' => true,
            'routerCacheFile' => 'C:\\xampp\\htdocs\\cen4010-s21-g01\\server\\api\\v1/var/cache/routes.php',
            'uploadDirectory' => 'C:\\xampp\\htdocs\\cen4010-s21-g01/public_html/uploads',
            'firebase' => $this->get36(),
            'doctrine' => $this->get39(),
            'graph' => $this->get41(),
        ];
    }

}
