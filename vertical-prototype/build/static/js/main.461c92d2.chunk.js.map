{"version":3,"sources":["api/api_request.js","api/convert_datetime.js","Models/User.js","Models/Base.js","App.js","api/upload_image.js","index.js"],"names":["api_request","method","target","payload","url","init","headers","includes","fetch","then","r","json","convert_datetime","datetime","split","datePart","timePart","date","month","year","hours","minutes","seconds","Date","UTC","User","password","this","type","attributes","obj","hydrate","data","id","current","username","getAttribute","pet","updateToManyRelationship","post","relationships","createdAt","attr","val","res","relationship","objs","updateRelationship","map","toResourceIdentifier","App","useState","file","setFile","users","setUsers","imageUrl","setImageUrl","session","setSession","setUsername","setPassword","onSubmitFile","body","upload_image","path","window","alert","catch","err","ImageFigure","image","Figure","FigureImage","src","width","FigureCaption","Container","Button","onClick","user","u","Table","index","firstName","lastName","Form","Group","Label","Control","placeholder","onChange","event","value","variant","email","File","label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAAe,SAASA,EAAYC,EAAQC,GAAyB,IAAjBC,EAAgB,uDAAN,KACpDC,EAAG,mDAA+CF,GAClDG,EAAO,CACTJ,SACAK,QAAS,CACL,eAAgB,mBAChB,OAAgB,qBAQxB,MAJI,CAAC,OAAQ,MAAO,SAASC,SAASN,KAClCI,EAAI,KAAWF,GAGZK,MAAMJ,EAAKC,GAAMI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UCLxB,SAASC,EAAiBC,GAAW,IAAD,EACnBA,EAASC,MAAM,KADI,mBACzCC,EADyC,KAC/BC,EAD+B,OAEpBD,EAASD,MAAM,KAFK,mBAEzCG,EAFyC,KAEnCC,EAFmC,KAE5BC,EAF4B,OAGdH,EAASF,MAAM,KAHD,mBAGzCM,EAHyC,KAGlCC,EAHkC,KAGzBC,EAHyB,KAKhD,OAAOC,KAAKC,IAAIL,EAAMD,EAAOD,EAAMG,EAAOC,EAASC,G,ICXlCG,E,kDAEjB,aAAe,uCACL,S,0CASV,SAAOC,GAAW,IAAD,OACb,OAAO1B,EAAY,OAAD,WAAa2B,KAAKC,MAAQ,CACxCA,KAAYD,KAAKC,KACjBC,WAAYF,KAAKE,aAClBpB,MAAK,SAAAqB,GAEJ,OADA,EAAKC,QAAQD,EAAIE,MACVhC,EAAY,MAAD,qBAAsB8B,EAAIE,KAAKC,IAAMP,Q,4BAI/D,SAAeQ,EAASR,GACpB,OAAO1B,EAAY,QAAD,qBAAwB2B,KAAKM,IAAM,CAAEC,UAASR,e,mBAGpE,SAAMA,GACF,OAAO1B,EAAY,OAAQ,WAAY,CACnCmC,SAAUR,KAAKS,aAAa,YAC5BV,e,oBAIR,WACI,OAAO1B,EAAY,SAAU,c,yBAGjC,SAAYqC,GACR,OAAOV,KAAKW,yBAAyB,OAAQ,gBAAiB,CAACD,M,6BAGnE,SAAgBA,GACZ,OAAOV,KAAKW,yBAAyB,SAAU,gBAAiB,CAACD,M,yBAGrE,SAAYE,GACR,OAAOZ,KAAKW,yBAAyB,OAAQ,YAAa,CAACC,M,4BAG/D,SAAeA,GACX,OAAOZ,KAAKW,yBAAyB,SAAU,YAAa,CAACC,M,kBAGjE,SAAKA,GACD,OAAOZ,KAAKW,yBAAyB,OAAQ,cAAe,CAACC,M,oBAGjE,SAAOA,GACH,OAAOZ,KAAKW,yBAAyB,SAAU,cAAe,CAACC,Q,cCxDnE,WAAYX,GAAO,oBACfD,KAAKM,GAAK,KACVN,KAAKC,KAAOA,EACZD,KAAKE,WAAa,GAClBF,KAAKa,cAAgB,G,2CAGzB,SAAQV,GACJH,KAAKM,GAAKH,EAAIG,GACdN,KAAKE,WAAaC,EAAID,WAElB,cAAeF,KAAKE,aACpBF,KAAKc,UAAY7B,EAAiBe,KAAKE,WAAWY,YAGtDd,KAAKa,cAAgBV,EAAIU,gB,0BAG7B,SAAaE,EAAMC,GACfhB,KAAKE,WAAWa,GAAQC,I,0BAG5B,SAAaD,GACT,OAAOf,KAAKE,WAAWa,K,kCAG3B,WACI,MAAO,CACHd,KAAMD,KAAKC,KACXK,GAAMN,KAAKM,M,wBAInB,WACI,MAAO,CACHL,KAAYD,KAAKC,KACjBK,GAAYN,KAAKM,GACjBJ,WAAYF,KAAKE,c,oBAIzB,WAA8B,IAAvBW,EAAsB,uDAAN,KACbrC,EAAU,CACZyB,KAAYD,KAAKC,KACjBC,WAAYF,KAAKE,YAOrB,OAJsB,OAAlBW,IACArC,EAAO,cAAoBqC,GAGxBxC,EAAY,OAAD,WAAa2B,KAAKC,MAAQzB,GACvCM,MAAK,SAAAmC,GAAG,OAAIA,EAAIZ,U,oBAGzB,WACI,OAAOhC,EAAY,QAAD,WAAc2B,KAAKC,MAAQ,CACzCA,KAAYD,KAAKC,KACjBK,GAAYN,KAAKM,GACjBJ,WAAYF,KAAKE,e,oBAIzB,WACI,OAAO7B,EAAY,SAAD,WAAe2B,KAAKC,KAApB,YAA4BD,KAAKM,O,gCAGvD,SAAmBhC,EAAQ4C,EAAc1C,GACrC,OAAOH,EACHC,EADc,WAEV0B,KAAKC,KAFK,YAEGD,KAAKM,GAFR,0BAE4BY,GAC1C1C,K,sCAIR,SAAyBF,EAAQ4C,EAAcC,GAC3C,OAAOnB,KAAKoB,mBACR9C,EACA4C,EACAC,EAAKE,KAAI,SAAAlB,GAAG,OAAIA,EAAImB,6B,qCAI5B,SAAwBhD,EAAQ4C,EAAcf,GAC1C,OAAOH,KAAKoB,mBACR9C,EACA4C,EACAf,EAAImB,4B,iBCzED,SAASC,IAAO,IAAD,EACFC,mBAAS,MADP,mBACnBC,EADmB,KACbC,EADa,OAEAF,mBAAS,IAFT,mBAEnBG,EAFmB,KAEZC,EAFY,OAGMJ,mBAAS,MAHf,mBAGnBK,EAHmB,KAGTC,EAHS,OAIIN,mBAAS,MAJb,mBAInBO,EAJmB,KAIVC,EAJU,OAKMR,mBAAS,IALf,mBAKnBhB,EALmB,KAKTyB,EALS,OAMMT,mBAAS,IANf,mBAMnBzB,EANmB,KAMTmC,EANS,KAUpBC,EC7BK,SAAsBV,GACjC,OAAO5C,MAAM,oDAAqD,CAAEP,OAAQ,OAAQ8D,KAAMX,IACrF3C,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAC,GAAC,OAAIA,EAAEsB,QD0BIgC,CAAaZ,GAC7B3C,MAAK,SAAAwD,GACFR,EAAYQ,GACZC,OAAOC,MAAP,+BAAqCF,OAExCG,OAAM,SAAAC,GAAG,OAAIH,OAAOC,MAAP,sCAAwD,OAAZT,EAAmB,yBAA2B,8BAgCtGY,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAaC,IAAKH,EAAOI,MAAO,MAEhC,cAACC,EAAA,EAAD,iCAGR,OACI,eAACC,EAAA,EAAD,WACI,0DAEA,cAACC,EAAA,EAAD,CAAQC,QAzCG,kBAAM/E,EAAY,MAAO,UACvCS,MAAK,SAAAmC,GAAG,OAAIA,EAAIZ,QAChBvB,MAAK,SAAA6C,GAAK,OAAIA,EAAMN,KAAI,SAAAgC,GACrB,IAAMC,EAAI,IAAIxD,EAId,OAFAwD,EAAElD,QAAQiD,GAEHC,QAEVxE,KAAK8C,IAgCF,uBAEA,eAAC2B,EAAA,EAAD,WACI,gCACI,+BACI,oCACA,0CACA,gDACA,4CACA,2CACA,gDAIR,gCACK5B,EAAMN,KAAI,SAACgC,EAAMG,GAAP,OACP,+BACI,6BAAKH,EAAK/C,KACV,6BAAK+C,EAAK5C,aAAa,cACvB,6BAAK4C,EAAK5C,aAAa,WACvB,6BAAK4C,EAAK5C,aAAa,eACvB,6BAAK4C,EAAK5C,aAAa,cACvB,6BAAK4C,EAAK5C,aAAa,iBANlB+C,WAYrB,+CAAkBzB,EAAO,UAAMA,EAAQ7B,WAAWuD,UAAzB,YAAsC1B,EAAQ7B,WAAWwD,UAAa,uBAE/F,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,uBACA,cAACF,EAAA,EAAKG,QAAN,CAAc7D,KAAK,OACL8D,YAAY,iBACZC,SAjEL,SAAAC,GAAK,OAAIhC,EAAYgC,EAAM1F,OAAO2F,aAoE/C,eAACP,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,uBACA,cAACF,EAAA,EAAKG,QAAN,CAAc7D,KAAK,WACL8D,YAAY,iBACZC,SAvEL,SAAAC,GAAK,OAAI/B,EAAY+B,EAAM1F,OAAO2F,aA0E/C,cAACf,EAAA,EAAD,CAAQgB,QAAQ,UAAUf,QAxEtB,kBAAM/E,EAAY,OAAQ,WAAY,CAAEmC,WAAUT,aAC7DjB,MAAK,SAAAmC,GAAG,OAAIA,EAAIZ,QAChBvB,MAAK,kBAA8D,CAChEmB,KAAM,QACNK,GAFE,EAAGA,GAGLJ,WAAY,CACRM,SAJF,EAAOA,SAKLiD,UALF,EAAiBA,UAMfC,SANF,EAA4BA,SAO1BU,MAPF,EAAsCA,MAQpCtD,UAAW7B,EARb,EAA6C6B,gBAWlDhC,KAAKkD,IA2DE,sBAGJ,uBAEA,6CAEA,kFAECH,GAAY,cAACc,EAAD,CAAaC,MAAOf,IAEjC,eAAC8B,EAAA,EAAD,WACI,cAACA,EAAA,EAAKU,KAAN,CAAWC,MAAM,kBAAkBN,SA3GzB,SAAAC,GAAK,OAAIvC,EAAQuC,EAAM1F,WA4GjC,cAAC4E,EAAA,EAAD,CAAQgB,QAAQ,UAAUf,QAASjB,EAAnC,gC,MExHhBoC,IAASC,QART,WACI,OACI,cAAC,IAAMC,WAAP,UACI,cAAClD,EAAD,QAKUmD,SAASC,eAAe,W","file":"static/js/main.461c92d2.chunk.js","sourcesContent":["export default function api_request(method, target, payload = null) {\n    const url = `https://lamp.cse.fau.edu/~cen4010_s21_g01${target}`\n    const init = {\n        method,\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept':       'application/json',\n        }\n    }\n\n    if (['POST', 'PUT', 'PATCH'].includes(method)) {\n        init['body'] = payload\n    }\n\n    return fetch(url, init).then(r => r.json())\n}\n","/**\n * In MySQL, the DATETIME data type returns dates using the \"YYYY-MM-DD HH:II:SS\"\n * format.\n * \n * Also worth noting that dates are stored relative to UTC.\n * \n * @param {string} datetimeString\n * @returns {Date} A Date object initialized using provided string.\n */\n export default function convert_datetime(datetime) {\n    const [datePart, timePart] = datetime.split(' ')\n    const [date, month, year] = datePart.split('-')\n    const [hours, minutes, seconds] = timePart.split(':')\n\n    return Date.UTC(year, month, date, hours, minutes, seconds)\n}\n","import Base from './Base'\nimport api_request from '../api/api_request'\n\nexport default class User extends Base\n{\n    constructor() {\n        super('users')\n    }\n\n    /**\n     * Creating users is a two-step process: a resource must be created and\n     * their password must be set immediately afterward.\n     * \n     * @param {string}   password\n     */\n    create(password) {\n        return api_request('POST', `/${this.type}`, {\n            type:       this.type,\n            attributes: this.attributes,\n        }).then(obj => {\n            this.hydrate(obj.data)\n            return api_request('PUT', `/passwords/${obj.data.id}`, password)\n        })\n    }\n\n    updatePassword(current, password) {\n        return api_request('PATCH', `/passwords/${this.id}`, { current, password })\n    }\n\n    login(password) {\n        return api_request('POST', '/session', {\n            username: this.getAttribute('username'),\n            password\n        })\n    }\n\n    logout() {\n        return api_request('DELETE', '/session')\n    }\n\n    subscribeTo(pet) {\n        return this.updateToManyRelationship('POST', 'subscriptions', [pet])\n    }\n\n    unsubscribeFrom(pet) {\n        return this.updateToManyRelationship('DELETE', 'subscriptions', [pet])\n    }\n\n    addFavorite(post) {\n        return this.updateToManyRelationship('POST', 'favorites', [post])\n    }\n\n    removeFavorite(post) {\n        return this.updateToManyRelationship('DELETE', 'favorites', [post])\n    }\n\n    like(post) {\n        return this.updateToManyRelationship('POST', 'liked-posts', [post])\n    }\n\n    unlike(post) {\n        return this.updateToManyRelationship('DELETE', 'liked-posts', [post])\n    }\n}","import api_request from '../api/api_request'\nimport convert_datetime from '../api/convert_datetime'\n\nexport default class Base\n{\n    constructor(type) {\n        this.id = null\n        this.type = type\n        this.attributes = {}\n        this.relationships = {}\n    }\n\n    hydrate(obj) {\n        this.id = obj.id\n        this.attributes = obj.attributes\n\n        if ('createdAt' in this.attributes) {\n            this.createdAt = convert_datetime(this.attributes.createdAt)\n        }\n\n        this.relationships = obj.relationships\n    }\n\n    setAttribute(attr, val) {\n        this.attributes[attr] = val\n    }\n\n    getAttribute(attr) {\n        return this.attributes[attr]\n    }\n\n    toResourceIdentifier() {\n        return {\n            type: this.type,\n            id:   this.id,\n        }\n    }\n\n    toResource() {\n        return {\n            type:       this.type,\n            id:         this.id,\n            attributes: this.attributes,\n        }\n    }\n\n    create(relationships = null) {\n        const payload = {\n            type:       this.type,\n            attributes: this.attributes\n        }\n\n        if (relationships !== null) {\n            payload['relationships'] = relationships\n        }\n\n        return api_request('POST', `/${this.type}`, payload)\n            .then(res => res.data)\n    }\n\n    update() {\n        return api_request('PATCH', `/${this.type}`, {\n            type:       this.type,\n            id:         this.id,\n            attributes: this.attributes,\n        })\n    }\n\n    delete() {\n        return api_request('DELETE', `/${this.type}/${this.id}`);\n    }\n\n    updateRelationship(method, relationship, payload) {\n        return api_request(\n            method,\n            `/${this.type}/${this.id}/relationships/${relationship}`,\n            payload\n        )\n    }\n\n    updateToManyRelationship(method, relationship, objs) {\n        return this.updateRelationship(\n            method,\n            relationship,\n            objs.map(obj => obj.toResourceIdentifier())\n        )\n    }\n\n    updateToOneRelationship(method, relationship, obj) {\n        return this.updateRelationship(\n            method,\n            relationship,\n            obj.toResourceIdentifier()\n        )\n    }\n}","import { useState } from 'react'\n\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Figure from 'react-bootstrap/Figure'\nimport FigureImage from 'react-bootstrap/FigureImage'\nimport FigureCaption from 'react-bootstrap/esm/FigureCaption'\n\nimport User from './Models/User'\n\nimport upload_image from './api/upload_image'\nimport api_request from './api/api_request'\nimport convert_datetime from './api/convert_datetime'\n\n// Normally an app would be made up of many smaller, self-contained components.\n// For the sake of demonstrating that things work, it's okay to have a mess for\n// now :)\nexport default function App() {\n    const [file, setFile] = useState(null)\n    const [users, setUsers] = useState([])\n    const [imageUrl, setImageUrl] = useState(null)\n    const [session, setSession] = useState(null)\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const onFileChanged = event => setFile(event.target)\n\n    const onSubmitFile = upload_image(file)\n        .then(path => {\n            setImageUrl(path)\n            window.alert(`File uploaded! Path: ${path}`)\n        })\n        .catch(err => window.alert(`Unable to upload the image. ${session === null ? 'You are not signed in!' : 'Go bug Tom about this.'}`))\n\n    const onGetUsers = () => api_request('GET', '/users')\n        .then(res => res.data)\n        .then(users => users.map(user => {\n            const u = new User()\n            \n            u.hydrate(user)\n\n            return u\n        }))\n        .then(setUsers)\n\n    const onUsernameChange = event => setUsername(event.target.value)\n    const onPasswordChange = event => setPassword(event.target.value)\n\n    const onLogin = () => api_request('POST', '/session', { username, password })\n        .then(res => res.data)\n        .then(({ id, username, firstName, lastName, email, createdAt }) => ({\n            type: 'users',\n            id,\n            attributes: {\n                username,\n                firstName,\n                lastName,\n                email,\n                createdAt: convert_datetime(createdAt)\n            }\n        }))\n        .then(setSession)\n\n    // Properties are passed in as a plain JavaScript object.\n    const ImageFigure = ({ image }) =>\n        <Figure>\n            <FigureImage src={image} width={400} />\n\n            <FigureCaption>Uploaded Image</FigureCaption>\n        </Figure>\n\n    return (\n        <Container>\n            <h1>Users and Authentication</h1>\n\n            <Button onClick={onGetUsers}>Get Users</Button>\n\n            <Table>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Username</th>\n                        <th>E-mail Address</th>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>Joined On</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {users.map((user, index) =>\n                        <tr key={index}>\n                            <td>{user.id}</td>\n                            <td>{user.getAttribute('username')}</td>\n                            <td>{user.getAttribute('email')}</td>\n                            <td>{user.getAttribute('firstName')}</td>\n                            <td>{user.getAttribute('lastName')}</td>\n                            <td>{user.getAttribute('createdAt')}</td>\n                        </tr>\n                    )}\n                </tbody>\n            </Table>\n\n            <p>Logged in as: {session ? `${session.attributes.firstName} ${session.attributes.lastName}` : '(unauthenticated)'}</p>\n\n            <Form>\n                <Form.Group>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"text\"\n                                  placeholder=\"Enter username\"\n                                  onChange={onUsernameChange} />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\"\n                                  placeholder=\"Enter password\"\n                                  onChange={onPasswordChange} />\n                </Form.Group>\n\n                <Button variant=\"primary\" onClick={onLogin}>Login</Button>\n            </Form>\n\n            <hr />\n\n            <h1>File Upload</h1>\n\n            <p>Note: you must be authenticated to upload images!</p>\n\n            {imageUrl && <ImageFigure image={imageUrl} />}\n\n            <Form>\n                <Form.File label=\"Upload an image\" onChange={onFileChanged} />\n                <Button variant=\"primary\" onClick={onSubmitFile}>Upload Image</Button>\n            </Form>\n        </Container>\n    )\n}\n","export default function upload_image(file) {\n    return fetch(`https://lamp.cse.fau.edu/~cen4010_s21_g01/uploads`, { method: 'POST', body: file })\n        .then(r => r.json())\n        .then(r => r.data)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction main() {\n    return (\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    )\n}\n\nReactDOM.render(main, document.getElementById('root'))\n"],"sourceRoot":""}