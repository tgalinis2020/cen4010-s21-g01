{"version":3,"sources":["api/api_request.js","api/convert_datetime.js","Models/User.js","Models/Base.js","main.js","api/upload_image.js","index.js"],"names":["api_request","method","target","data","url","init","headers","includes","JSON","stringify","fetch","convert_datetime","datetime","split","datePart","timePart","date","month","year","hours","minutes","seconds","Date","UTC","User","password","this","type","attributes","then","obj","hydrate","id","current","username","getAttribute","pet","updateToManyRelationship","post","relationships","createdAt","attr","val","payload","res","relationship","objs","updateRelationship","map","toResourceIdentifier","getSession","firstName","lastName","email","LoginForm","onLoginSuccess","onLoginError","onLogoutSuccess","useState","setUsername","setPassword","Form","Group","Label","Control","placeholder","onChange","event","value","Button","variant","onClick","status","catch","ImageFigure","image","Figure","FigureImage","src","width","FigureCaption","Main","file","setFile","users","setUsers","imageUrl","setImageUrl","session","setSession","onGetUsers","json","user","u","err","console","log","Container","className","Table","index","code","window","alert","File","label","body","upload_image","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b7057d4.chunk.js","sourcesContent":["export default function api_request(method, target, data = null) {\n    const url = `https://lamp.cse.fau.edu/~cen4010_s21_g01/api-v1.php${target}`\n    const init = {\n        method,\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept':       'application/json',\n        }\n    }\n\n    if (['POST', 'PUT', 'PATCH'].includes(method)) {\n        init['body'] = JSON.stringify({ data })\n    }\n\n    return fetch(url, init)\n}\n","/**\n * In MySQL, the DATETIME data type returns dates using the \"YYYY-MM-DD HH:II:SS\"\n * format.\n * \n * Also worth noting that dates are stored relative to UTC.\n * \n * @param {string} datetimeString\n * @returns {Date} A Date object initialized using provided string.\n */\n export default function convert_datetime(datetime) {\n    const [datePart, timePart] = datetime.split(' ')\n    const [date, month, year] = datePart.split('-')\n    const [hours, minutes, seconds] = timePart.split(':')\n\n    return Date.UTC(year, month, date, hours, minutes, seconds)\n}\n","import Base from './Base'\nimport api_request from '../api/api_request'\n\nexport default class User extends Base\n{\n    constructor() {\n        super('users')\n    }\n\n    /**\n     * Creating users is a two-step process: a resource must be created and\n     * their password must be set immediately afterward.\n     * \n     * @param {string}   password\n     */\n    create(password) {\n        return api_request('POST', `/${this.type}`, {\n            type:       this.type,\n            attributes: this.attributes,\n        }).then(obj => {\n            this.hydrate(obj.data)\n            return api_request('PUT', `/passwords/${obj.data.id}`, password)\n        })\n    }\n\n    updatePassword(current, password) {\n        return api_request('PATCH', `/passwords/${this.id}`, { current, password })\n    }\n\n    login(password) {\n        return api_request('POST', '/session', {\n            username: this.getAttribute('username'),\n            password\n        })\n    }\n\n    logout() {\n        return api_request('DELETE', '/session')\n    }\n\n    subscribeTo(pet) {\n        return this.updateToManyRelationship('POST', 'subscriptions', [pet])\n    }\n\n    unsubscribeFrom(pet) {\n        return this.updateToManyRelationship('DELETE', 'subscriptions', [pet])\n    }\n\n    addFavorite(post) {\n        return this.updateToManyRelationship('POST', 'favorites', [post])\n    }\n\n    removeFavorite(post) {\n        return this.updateToManyRelationship('DELETE', 'favorites', [post])\n    }\n\n    like(post) {\n        return this.updateToManyRelationship('POST', 'liked-posts', [post])\n    }\n\n    unlike(post) {\n        return this.updateToManyRelationship('DELETE', 'liked-posts', [post])\n    }\n}","import api_request from '../api/api_request'\nimport convert_datetime from '../api/convert_datetime'\n\nexport default class Base\n{\n    constructor(type) {\n        this.id = null\n        this.type = type\n        this.attributes = {}\n        this.relationships = {}\n    }\n\n    hydrate(obj) {\n        this.id = obj.id\n        this.attributes = obj.attributes\n\n        if ('createdAt' in this.attributes) {\n            this.createdAt = convert_datetime(this.attributes.createdAt)\n        }\n\n        this.relationships = obj.relationships\n    }\n\n    setAttribute(attr, val) {\n        this.attributes[attr] = val\n    }\n\n    getAttribute(attr) {\n        return this.attributes[attr]\n    }\n\n    toResourceIdentifier() {\n        return {\n            type: this.type,\n            id:   this.id,\n        }\n    }\n\n    toResource() {\n        return {\n            type:       this.type,\n            id:         this.id,\n            attributes: this.attributes,\n        }\n    }\n\n    create(relationships = null) {\n        const payload = {\n            type:       this.type,\n            attributes: this.attributes\n        }\n\n        if (relationships !== null) {\n            payload['relationships'] = relationships\n        }\n\n        return api_request('POST', `/${this.type}`, payload)\n            .then(res => res.data)\n    }\n\n    update() {\n        return api_request('PATCH', `/${this.type}`, {\n            type:       this.type,\n            id:         this.id,\n            attributes: this.attributes,\n        })\n    }\n\n    delete() {\n        return api_request('DELETE', `/${this.type}/${this.id}`);\n    }\n\n    updateRelationship(method, relationship, payload) {\n        return api_request(\n            method,\n            `/${this.type}/${this.id}/relationships/${relationship}`,\n            payload\n        )\n    }\n\n    updateToManyRelationship(method, relationship, objs) {\n        return this.updateRelationship(\n            method,\n            relationship,\n            objs.map(obj => obj.toResourceIdentifier())\n        )\n    }\n\n    updateToOneRelationship(method, relationship, obj) {\n        return this.updateRelationship(\n            method,\n            relationship,\n            obj.toResourceIdentifier()\n        )\n    }\n}","import { useState, useEffect } from 'react'\n\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Figure from 'react-bootstrap/Figure'\nimport FigureImage from 'react-bootstrap/FigureImage'\nimport FigureCaption from 'react-bootstrap/esm/FigureCaption'\n\nimport User from './Models/User'\n\nimport upload_image from './api/upload_image'\nimport api_request from './api/api_request'\nimport convert_datetime from './api/convert_datetime'\n\nconst getSession = ({ id, username, firstName, lastName, email, createdAt }) => ({\n    type: 'users',\n    id,\n    attributes: {\n        username,\n        firstName,\n        lastName,\n        email,\n        createdAt: convert_datetime(createdAt)\n    }\n})\n\nfunction LoginForm({ onLoginSuccess, onLoginError, onLogoutSuccess }) {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const onUsernameChange = event => setUsername(event.target.value)\n    const onPasswordChange = event => setPassword(event.target.value)\n\n    const onLogin = () => api_request('POST', '/session', { username, password })\n        .then(res => {\n            if (res.status !== 201) {\n                throw res.status\n            }\n\n            return res\n        })\n        .then(res => res.data)\n        .then(getSession)\n        .then(onLoginSuccess)\n        .catch(onLoginError)\n\n    const onLogout = () => api_request('DELETE', '/session').then(onLogoutSuccess)\n\n    return (\n        <Form>\n            <Form.Group>\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\"\n                              placeholder=\"Enter username\"\n                              onChange={onUsernameChange} />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\"\n                              placeholder=\"Enter password\"\n                              onChange={onPasswordChange} />\n            </Form.Group>\n\n            <Button variant=\"primary\" onClick={onLogin}>Login</Button>\n\n            <Button variant=\"secondary\" onClick={onLogout}>Logout</Button>\n        </Form>\n    )\n}\n\n\nfunction ImageFigure({ image }) {\n    return (\n        <Figure>\n            <FigureImage src={image} width={400} />\n\n            <FigureCaption>Uploaded Image</FigureCaption>\n        </Figure>\n    )\n}\n\n\n// Normally an app would be made up of many smaller, self-contained components.\n// For the sake of demonstrating that things work, it's okay to have a mess for\n// now :)\nexport default function Main() {\n    const [file, setFile] = useState(null)\n    const [users, setUsers] = useState([])\n    const [imageUrl, setImageUrl] = useState(null)\n    const [session, setSession] = useState(null)\n\n    const onFileChanged = event => setFile(event.target)\n    const onLoginError = code => window.alert(`Can't log in! (error code ${code})`)\n    const onLogoutSuccess = () => setSession(null)\n\n    const onSubmitFile = () => upload_image(file)\n        .then(res => res.json())\n        .then(res => res.data)\n        .then(path => {\n            setImageUrl(path)\n            window.alert(`File uploaded! Path: ${path}`)\n        })\n        .catch(err => window.alert(`Unable to upload the image. ${session === null ? 'You are not signed in!' : 'Go bug Tom about this.'}`))\n\n    const onGetUsers = () => api_request('GET', '/users')\n        .then(res => res.json())\n        .then(res => res.data)\n        .then(users => users.map(user => {\n            const u = new User()\n            \n            u.hydrate(user)\n\n            return u\n        }))\n        .then(setUsers)\n\n    // Check to see if the user is already logged in.\n    api_request('GET', '/session')\n        .then(res => res.json())\n        .then(res => res.data)\n        .then(getSession)\n        .then(setSession)\n        .catch(err => console.log('Not logged in'))\n\n    // Load users when component loads.\n    onGetUsers()\n\n    return (\n        <Container>\n            <h1>Users and Authentication</h1>\n\n            <Button className=\"mb-4\" onClick={onGetUsers}>Refresh</Button>\n\n            <Table>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Username</th>\n                        <th>E-mail Address</th>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>Joined On</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {users.map((user, index) =>\n                        <tr key={index}>\n                            <td>{user.id}</td>\n                            <td>{user.getAttribute('username')}</td>\n                            <td>{user.getAttribute('email')}</td>\n                            <td>{user.getAttribute('firstName')}</td>\n                            <td>{user.getAttribute('lastName')}</td>\n                            <td>{user.getAttribute('createdAt')}</td>\n                        </tr>\n                    )}\n                </tbody>\n            </Table>\n\n            <p>Logged in as: {session ? `${session.attributes.firstName} ${session.attributes.lastName}` : '(unauthenticated)'}</p>\n\n            <LoginForm onLoginSuccess={setSession}\n                       onLoginError={onLoginError}\n                       onLogoutSuccess={onLogoutSuccess} />\n\n            <hr />\n\n            <h1>File Upload</h1>\n\n            <p>Note: you must be authenticated to upload images!</p>\n\n            {imageUrl && <ImageFigure image={imageUrl} />}\n\n            <Form>\n                <Form.File label=\"Upload an image\" onChange={onFileChanged} />\n                <Button variant=\"primary\" onClick={onSubmitFile}>Upload Image</Button>\n            </Form>\n        </Container>\n    )\n}\n","export default function upload_image(file) {\n    return fetch(`https://lamp.cse.fau.edu/~cen4010_s21_g01/uploads`, { method: 'POST', body: file })\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Main from './main'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Main />\n    </React.StrictMode>,\n    \n    document.getElementById('root')\n)\n"],"sourceRoot":""}